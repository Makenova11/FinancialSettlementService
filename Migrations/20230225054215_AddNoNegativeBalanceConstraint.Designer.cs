// <auto-generated />
using System;
using FinancialSettlementService.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FinancialSettlementService.Migrations
{
    [DbContext(typeof(BankDbContext))]
    [Migration("20230225054215_AddNoNegativeBalanceConstraint")]
    partial class AddNoNegativeBalanceConstraint
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FinancialSettlementService.Models.BalanceAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Balance")
                        .HasColumnType("numeric");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ClientId")
                        .IsUnique();

                    b.ToTable("BalanceAccounts", t =>
                        {
                            t.HasCheckConstraint("NoNegativeBalanceConstraint", "\"Balance\" >= 0");
                        });
                });

            modelBuilder.Entity("FinancialSettlementService.Models.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Patronymic")
                        .HasColumnType("text");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("FinancialSettlementService.Models.BalanceAccount", b =>
                {
                    b.HasOne("FinancialSettlementService.Models.Client", "Client")
                        .WithOne("BalanceAccount")
                        .HasForeignKey("FinancialSettlementService.Models.BalanceAccount", "ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("FinancialSettlementService.Models.Client", b =>
                {
                    b.Navigation("BalanceAccount")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
